<% def seconds_to_units(seconds)
  '%d days, %d hours, %d minutes, %d seconds' %
    [24,60,60].reverse.inject([seconds]) {|result, unitsize|
      result[0,0] = result.shift.divmod(unitsize)
      result
    }
end %>

<table class = "table table-borderless">
  <tr>
    <td><h1 class="mb-0"><%= @vm[:name] unless @vm.nil? %></h1></td>
    <% os = @vm[:summary]&.config&.guestFullName %>
    <td colspan="2" class="text-right align-bottom"><h2 class="mb-0"><%= "(#{os})" unless os.nil? || os.downcase.include?('other')%></h2></td>
  </tr>
  <tr>
      <% up_time = seconds_to_units(Time.current - @vm[:boot_time]) unless @vm[:boot_time].nil? %>
  
      <td class="lead align-middle" colspan="2">
        <div class="<%= @vm[:state]? 'bg-success' : 'bg-danger' %> text-white float-left pb-1 px-4 mr-2">
          <%= @vm[:state]? 'online' : 'offline' %>
        </div>
        <%= " for #{up_time}" if @vm[:state] %>
    </td>
    <td class="text-right" style="width: 20%">
    <div class="dropdown border text-right">
        <a class="dropdown-toggle text-muted ml-0 pr-2 pt-1 lead nav-link" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" aria-disabled="true">
          Manage
        </a>
        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
          <% if @vm[:state] %>
            <a class="dropdown-item" href="#">Suspend</a>
            <a class="dropdown-item" href="#">Shutdown Guest OS</a>
            <a class="dropdown-item" href="#">Restart Guest OS</a>
            <a class="dropdown-item" href="#">Reset</a>
            <a class="dropdown-item" href="#">Power Off</a>
          <% else %>
            <a class="dropdown-item" href="#">Power On</a>
          <% end %>
          <div class="dropdown-divider"></div>
          <a class="dropdown-item" href="#">Delete</a>
        </div>
        </div>
    </td>
  </tr>
</table>
<% 
  committed = (@vm[:summary]&.storage&.committed / 1024**3).round(2) || 0
  uncommitted = (@vm[:summary]&.storage&.committed / 1024**3).round(2) || 0
  hdd_usage = committed
  hdd_allocation = committed + uncommitted
  cpu_usage = @vm[:summary].quickStats&.overallCpuUsage || 0
  cpu_allocation = @vm[:summary].config&.cpuReservation || 0
  ram_usage = (@vm[:summary].quickStats&.guestMemoryUsage.to_f / 1024).round(2) || 0
  ram_allocation = (@vm[:summary].config&.memorySizeMB.to_f / 1024).round(2) || 0
  cpu_cores = @vm[:summary].config&.numCpu  || 0


  @values = {cpu_allocation: cpu_allocation, 
             cpu_usage: cpu_usage, 
             ram_allocation: ram_allocation, 
             ram_usage: ram_usage, 
             hdd_usage: hdd_usage, 
             hdd_allocation: hdd_allocation, 
             cpu_cores: cpu_cores } %>

<table class = "table table-borderless text-center">
  <tr>
    <td class="table-active">
      <%= render 'templates/resource_allocation', values: @values %>
    </td>
  </tr>
</table>

<table class = "table table-borderless">
  <tr class="lead">
    <td>Host: <%= link_to @vm[:host], controller: "hosts", action: "show", id: @vm[:host] unless @vm.nil? %></td>
    <td class="text-right">Project: Lorem Ipsum</td>
    </tr>
    </table>


<table class="table">
    <tbody>
    <tr>
    <td>Boot time:</td>
    <td><%= @vm[:boot_time] unless @vm.nil? %></td>
    </tr>

    <tr>
    <td>State:</td>
    <td><%= @vm[:summary].runtime.powerState unless @vm.nil? %></td>
  </tr>

    <tr>
    <td>Heartbeat status:</td>
    <td><%= @vm[:guestHeartbeatStatus] unless @vm.nil? %> </td>
    </tr>

      <tr>
    <td>Host:</td>
    <td>
    <%= link_to @vm[:host], controller: "hosts", action: "show", id: @vm[:host] unless @vm.nil? %>
    </td>

   
  <tr>
    <td>OS:</td>
    <td><%= @vm[:summary].config.guestId unless @vm.nil? %> (<%= @vm[:summary].config.guestFullName unless @vm.nil? %>)</td>
  </tr>

  </tr>
    <tr>
    <td>IP address:</td>
    <td><%= @vm[:summary].guest.ipAddress unless @vm.nil? %></td>
  </tr>
  </tbody>
</table>