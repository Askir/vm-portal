<%# https://github.com/bootstrap-ruby/bootstrap_form %>
<%= bootstrap_form_with(model: request, local: true) do |form| %>
  <%# https://github.com/bootstrap-ruby/bootstrap_form#alert-messages %>
  <%= form.alert_message "Please fix the errors below.", error_summary: false %>

  <div class="container-fluid mt-4">
    <div class="row border-bottom mb-4 pb-4">
      <div class="col">
        <h5>General Information</h5>
        Please enter a short description of the VM and how you are planning to use it.
      </div>
      <div class="col-6">
        <%= form.text_field :name, label: 'Name *' %>
        <%= form.text_area :description, rows: 4, label: 'Description *' %>
      
        <%# form.collection_select(method, collection, value_method, text_method, options = {}, html_options = {}) %>
        <%= form.collection_select :project_id, Project.all, :id, :name,
          options = {selected: form.object.project_id, include_blank: '(none)', label: 'Project *'},
          html_options = {class: 'selecttwo'} %>
        <%= form.collection_select :responsible_user_ids, User.all, :id, :human_readable_identifier,
          options = {selected: @request.responsible_users.collect(&:id),
                    label: 'Responsible Users *',
                    help: 'Note: All responsible users will automatically have sudo access rights on the VM.'},
          html_options = {multiple: true, class: 'selecttwo'} %>
      </div>
    </div> <%# div class="row" %>
    <div class="row border-bottom mb-4 pb-4">
      <div class="col">
        <h5>Hardware Information</h5>
        You can select a Template or enter custom requirements. If you have special requirements or need an operating
        system that is not in the list you can use the comment field at the bottom of this page.
      </div>
      <div class="col-6">
        <%# :template_id is ignored by the controller. Select only used for setting other form inputs. Instrumented by JS. %>
        <%# form.collection_select(method, collection, value_method, text_method, options = {}, html_options = {}) %>
        <%= form.collection_select :template_id, @request_templates, :to_json, :text_summary,
          options = {include_blank: '(none)', label: 'Template',
            help: 'Note: Selecting a template will populate the other hardware information fields.'},
          html_options = {} %>
        <div class="row pt-3">
          <div class="col-lg-4">
            <%= form.number_field :cpu_cores, min: 0, id: 'cpu', label: 'CPU Cores *' %>
          </div>
          <div class="col-lg-4">
            <%= form.number_field :ram_gb, min: 0, id: 'ram', label: 'RAM in GB *' %>
          </div>
          <div class="col-lg-4">
            <%= form.number_field :storage_gb, min: 0, id: 'storage', label: 'Storage in GB *' %>
          </div>
        </div>
        <%= form.select :operating_system, 
          operating_system_options,
          options = {label: 'Operating System *'},
          html_options = {id: 'operating_system'} %>
      </div>
    </div> <%# div class="row" %>
    <div class="row border-bottom mb-4 pb-4">
      <div class="col">
        <h5>Users</h5>
        Enter all users that need access to this VM. If you can't find a user, that is most likely because they have
        never logged into the HART system. Ask them to log in once so they are added to our list. You will be able to
        change which users have access to your VM at a later date. Make sure to enter yourself in the user list if you
        need access to the VM.
      </div>
      <div class="col-6">
        <%# form.collection_select(method, collection, value_method, text_method, options = {}, html_options = {}) %>
        <%= form.collection_select :sudo_user_ids, User.all, :id, :human_readable_identifier,
          options = {selected: @request.sudo_users.collect(&:id),
                    label: 'Users with sudo rights',
                    help: 'All responsible users will automatically be users with sudo rights.'},
          html_options = {class: 'selecttwo', multiple: true} %>
        <%= form.collection_select :user_ids, User.all, :id, :human_readable_identifier,
          options = {selected: (@request.users - @request.sudo_users).collect(&:id),
                    label: 'Regular users'},
          html_options = {class: 'selecttwo', multiple: true} %>
      </div>
    </div> <%# div class="row" %>
    <div class="row border-bottom mb-4 pb-4">
      <div class="col">
        <h5>Other Information</h5>
        If you require port forwarding, please enter the port and the application name below. </br>
        Any comment or additional information can be entered in the comment field.
      </div>
      <div class="col-6">
        <div class="pb-3 mb-3 border-bottom">
          <%= form.check_box :port_forwarding,
            options = {label: 'Enable port forwarding',
                      id: "request_port_forwarding_checkbox",
                      data: {
                        toggle: "collapse",
                        target: "#request_port_forwarding_info",
                        port_forwarding: @request.persisted? ? @request.port_forwarding : nil }} %>
          <div id="request_port_forwarding_info" class="collapse">
            <%= form.number_field :port, min: 0, max: 65535, id: 'port_field', label: 'Port *' %>
            <%= form.text_field :application_name, id: 'application_name_field', label: 'Application Name' %>
          </div>
        </div>
        <%= form.text_area :comment, cols: 40, rows: 4 %>
      </div>
    </div> <%# div class="row" %>

    <% if locals[:updating] %>
      <div class="row mb-4 pb-2">
        <div class="col">
          <h5>Admin Review</h5>
          Accept will create VM...
        </div>
        <div class="col-6">
          <%= bootstrap_form_with(model: request, url: {action: 'reject', id: request}, local: true) do |rejection_form| %>
            <%= rejection_form.text_area :rejection_information, label: 'Comment' %>
            <%= rejection_form.submit 'Reject', id: 'rejectButton', class: "btn btn-danger" %>
          <% end %>
          <%= form.submit 'Accept', id: 'acceptButton', class: "btn btn-primary pull-left mr-1" %>
          <%= link_to 'Back', requests_path, class: "btn btn-secondary" %>
        </div>
      </div>
    <% else %>
      <%= form.submit class: "btn btn-primary" %>
      <%= link_to 'Back', requests_path, class: "btn btn-secondary" %>
    <% end %>
  </div>
<% end %>

<%= javascript_include_tag('request') %>
